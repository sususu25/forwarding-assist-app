name: CI-CD Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      tag: ${{ steps.image-tag.outputs.tag }}
      registry: ${{ steps.login-ecr.outputs.registry }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate image tag
        id: image-tag
        run: |
          TAG=$(echo $GITHUB_SHA | cut -c1-7)
          echo "::set-output name=tag::$TAG"

      - name: Build, tag, and push image for document-generator-service
        id: build-image-doc-gen
        uses: docker/build-push-action@v2
        with:
          context: ./document-generator-service
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/document-generator-service:${{ steps.image-tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build, tag, and push image for regulation-service
        id: build-image-reg-service
        uses: docker/build-push-action@v2
        with:
          context: ./regulation-service
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/regulation-service:${{ steps.image-tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build, tag, and push image for error-check-service
        id: build-image-err-check
        uses: docker/build-push-action@v2
        with:
          context: ./error-check-service
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/error-check-service:${{ steps.image-tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build, tag, and push image for regulation-frontend
        id: build-image-reg-frontend
        uses: docker/build-push-action@v2
        with:
          context: ./regulation-frontend
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/regulation-frontend:${{ steps.image-tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-manifest:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout k8s-manifests repository
        uses: actions/checkout@v3
        with:
          repository: sususu25/forwarding-assist-k8s-manifests
          token: ${{ secrets.PAT_TOKEN }}
          path: forwarding-assist-k8s-manifests

      - name: Update image tags in manifest
        run: |
          cd forwarding-assist-k8s-manifests
          IMAGE_TAG=${{ needs.build-and-push.outputs.tag }}
          ECR_REGISTRY=${{ needs.build-and-push.outputs.registry }}
          
          sed -i "s|image: .*/document-generator-service:.*|image: ${ECR_REGISTRY}/document-generator-service:${IMAGE_TAG}|" document-generator-service/deployment.yaml
          sed -i "s|image: .*/regulation-service:.*|image: ${ECR_REGISTRY}/regulation-service:${IMAGE_TAG}|" regulation-service/deployment.yaml
          sed -i "s|image: .*/error-check-service:.*|image: ${ECR_REGISTRY}/error-check-service:${IMAGE_TAG}|" error-check-service/deployment.yaml
          sed -i "s|image: .*/regulation-frontend:.*|image: ${ECR_REGISTRY}/regulation-frontend:${IMAGE_TAG}|" regulation-frontend/deployment.yaml

      - name: Commit and push changes
        run: |
          cd forwarding-assist-k8s-manifests
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          if [[ -z $(git status -s) ]]; then
            echo "No changes to commit."
          else
            git add .
            git commit -m "Update image tags to ${{ needs.build-and-push.outputs.tag }}"
            git push
          fi